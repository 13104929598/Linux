Change the password

mysql> show variables like "%password%";
+---------------------------------------+-------+
| Variable_name                         | Value |
+---------------------------------------+-------+
| default_password_lifetime             | 0     |
| disconnect_on_expired_password        | ON    |
| log_builtin_as_identified_by_password | OFF   |
| mysql_native_password_proxy_users     | OFF   |
| old_passwords                         | 0     |
| report_password                       |       |
| sha256_password_proxy_users           | OFF   |
| validate_password_check_user_name     | OFF   |
| validate_password_dictionary_file     |       |
| validate_password_length              | 4     |
| validate_password_mixed_case_count    | 1     |
| validate_password_number_count        | 1     |
| validate_password_policy              | LOW   |
| validate_password_special_char_count  | 1     |
+---------------------------------------+-------+

mysql> set global validate_password_length=6;   //Change password length；At least 4.
mysql> set global validate_password_policy=0;  //Change password policy to empty

vim /etc/my.cnf     //Permanent configuration
[mysqld]
validate_password_length=6
validate_password_policy=0 

###################################################################################

database

-show databases;   //Display all libraries
-use The library;  // Switch livrary
-select database();   //Displays the current library
-create database The library;   //create a new library
-show tables;   //Display all tables
-drop database The library;   //Delete library

//////////////////////////////////////////////////////////////

table

mysql> create table dadb.stuinfo(
    -> name char(20),
    -> age int,
    -> homeadd char(50)
    -> );
  
-DEFAULT CHARSET=utf8  //Chinese Character set
    
-show tables;

-desc database.table;
+---------+----------+------+-----+---------+-------+
| Field   | Type     | Null | Key | Default | Extra |
+---------+----------+------+-----+---------+-------+
| name    | char(20) | YES  |     | NULL    |       |
| age     | int(11)  | YES  |     | NULL    |       |
| homeadd | char(50) | YES  |     | NULL    |       |
+---------+----------+------+-----+---------+-------+

-insert into stuinfo values("tom",20,"guangzhou"),("harry",18,"beijing");
-drop table database.table;
-select * from database.table;
-delete * from database.table where name="bob";
-alter table 表名 drop column 列名;  //删除整列
-update database.table set age=100;   //Modify the whole column
-update database.table set age=100 where name="tom";  //Modify those that are eligible


mysql> insert into stuinfo values("tom",20,"guangzhou"),
    -> ("harry",18,"beijing");

mysql> show create table t2;
+-------+-------------------------------------------------------------------------------------------+
| Table | Create Table                                                                              |
+-------+-------------------------------------------------------------------------------------------+
| t2    | CREATE TABLE `t2` (
  `name` char(10) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1 |
+-------+-------------------------------------------------------------------------------------------+
mysql> create table 学生表(姓名 char(20),性别 char(6)) DEFAULT CHARSET=utf8;  //创建中文表
mysql> create table t3( age tinyint unsigned, pay float(7,2) );  //定义数值类型


Numeric types
+-----------+--------+----------------+------------+------------+
| tinyint   | 1 byte | -128 ~ 127     | 0 ~ 255    | 微小整数    |                                                                  
+-----------+--------+----------------+------------+------------+
| smallint  | 2 byte | -32768 ~ 32767 | 0 ~ 65535  | 小整数      |
+-----------+--------+----------------+------------+------------+
| mediumint | 3 byte | -2^23 ~ 2^23-1 | 0 ~ 2^24-1 | 中整数      |
+-----------+--------+----------------+------------+------------+
| int       | 4 byte | -2^31 ~ 2^31-1 | 0 ~ 2^32-1 | 大整数      |
+-----------+--------+----------------+------------+------------+
| bigint    | 8 byte | -2^63 ~ 2^63-1 | 0 ~ 2^64-1 | 极大整数    |
+-----------+--------+-----------------------------+------------+
| float     | 4 byte |                             | 单精度浮点数 |
+-----------+--------+-----------------------------+------------+
| double    | 8 byte |                             | 双精度浮点数 |
+-----------+---------------------------------------------------+
| decimal   | 对decimal(M,D),M为有效位数,D为小数位数,M大于D,占M+2字节 |
+-----------+---------------------------------------------------+
| unsigned  | 使用无符号存储范围                                   |
+-----------+---------------------------------------------------+

mysql>  create table db1(
    -> name char(4),
    -> gender enum("boy","girl","no"),   //enum:Choose a single value
    -> interest set("book","film","music","football")   //set:Choose more than one value
    -> );
    
    
 ##################################################################################
 
 alter table tablename add values;
 alter table tablename modify valuestype;
 alter table tablename change valuesname;
 alter table tablename drop values;
 alter table tablename rename new tablename;
 
 ///////////////////////////////////////////////////////////////////////////
 
mysql> create table t21(
    -> name char(10),
    -> sex enum("boy","girl"),
    -> class char(7),
    -> age int(2),
    -> index(name),
    -> index(sex)
    -> );
    mysql> show index from t21\G;
*************************** 1. row ***************************
        Table: t21
   Non_unique: 1
     Key_name: name
 Seq_in_index: 1
  Column_name: name
    Collation: A
  Cardinality: 0
     Sub_part: NULL
       Packed: NULL
         Null: YES
   Index_type: BTREE
      Comment: 
Index_comment: 
*************************** 2. row ***************************
        Table: t21
   Non_unique: 1
     Key_name: sex
 Seq_in_index: 1
  Column_name: sex
    Collation: A
  Cardinality: 0
     Sub_part: NULL
       Packed: NULL
         Null: YES
   Index_type: BTREE
      Comment: 
Index_comment: 

mysql> drop index name on t21;
mysql> create index name on t21(name);

mysql> create table t22(
    -> name char(10),
    -> stu_num char(10),
    -> primary key(stu_num)
    -> );

mysql> create table t24(
    -> cip char(15),
    -> sport smallint(2),
    -> status enum("deny","allow"),
    -> primary key(cip,sport)
    -> );
    
mysql> create table t25(
    -> stu_id int(2) primary key auto_increment,
    -> name char(5),
    -> age int(2) unsigned
    -> );
 
mysql> create table yg(
    -> yg_id int(2) primary key auto_increment,
    -> name char(10)
    -> )engine=innodb;

mysql> creat table gz(
    -> gz_id int(2),
    -> pay float(7,2),
    -> foreign key(gz_id) references yg(yg_id)
    -> on update cascade on delete cascade
    -> )engine=innodb;

mysql> alter table gz drop foreign key gz_ibfk_1;  //delete foreign key

mysql> alter table score add foreign key(cno) references course(cno);  //add foreign key

######################################################################################

mysql八大组件：

连接池、sql接口、分析器、优化器、查询缓存
、存储引擎、文件系统、管理工具 


mysql事务特性（ACID）
-Atomic：原子性
事物的整个操作是一个整体，不可分割，要么全部成功，要么全部失败。

-Consistency：一致性
事物操作的前后，表中的记录没有变化。

-Isolation：隔离性
事物操作是相互隔离不受影响的。

-Durability：持久性
数据一旦提交，不可改变，永久改变表数据。

mysql> rollback;  //事务回滚 innodb

mysql> commit; //数据提交 innodb


/////////////////////////////////////////////////////////////////////////


导入导出

mysql> show variables like "secure_file%";
+------------------+-----------------------+
| Variable_name    | Value                 |
+------------------+-----------------------+
| secure_file_priv | /var/lib/mysql-files/ |
+------------------+-----------------------+

cp /etc/passwd /var/lib/mysql-files/passwd

mysql> load data infile "/var/lib/mysql-files/passwd"
    -> into table user
    -> fields terminated by ":"
    -> lines terminated by "\n";

echo secure_file_priv=/mydir >> /etc/my.cnf
chown mysql /mydir

mysql> select * from user where shell="/bin/bash" 
    -> into outfile "/mydir/b.txt"
    -> fields terminated by ""
    -> lines terminated by "\n";

///////////////////////////////////////////////////////////////////////////

mysql> select name,uid from user where uid between 50 and 100;
mysql> select name,uid from user where  name regexp "[0-9]";


//////////////////////////////////////////////////////////////////////////////////////



1、查询Student表中的所有记录的Sname、Ssex和Class列。
select sname,ssex,class from student;
2、查询教师所有的单位即不重复的Depart列。
mysql> select distinct(depart) from teacher;
3、查询Student表的所有记录。
Select * from student;
4、查询Score表中成绩在60到80之间的所有记录。
mysql> select * from score where degree >= 60 and degree <=80;
5、查询Score表中成绩为85，86或88的记录。
mysql> select * from score where degree=85 or degree=86 or degree=88;
6、查询Student表中“95031”班或性别为“女”的同学记录。
mysql> select * from student where ssex="女" or class="95033";
7、以Class降序查询Student表的所有记录。
mysql> select * from student order by class desc;
8、以Cno升序、Degree降序查询Score表的所有记录。
mysql> select cno,degree,sno from score order by cno ,degree desc;
9、查询“95031”班的学生人数。
mysql> select count(*) from student where class=95031;
10、 查询Score表中的最高分的学生学号和课程号。（排序）
mysql> select cno,degree from score order by degree desc limit 1;
11、查询每门课的平均成绩。
mysql> select avg(degree) as 平均成绩,cname as 课程名称 from score,course where score.cno=course.cno group by cname;
12、查询Score表中至少有5名学生选修的并以3开头的课程的平均分数。
mysql> select cno,count(cno)  ,avg(degree)  from score  where cno like "3%"  group by cno  having count(cno)>=5;
13、查询分数大于70，小于90的Sno列。
mysql> select sno from score where degree between 70 and 90;
14、 查询“95033”班学生的平均分。
mysql> select avg(degree) from score,student where score.sno=student.sno and class=95033;
15、查询95033班和95031班全体学生的记录。
mysql> select * from student,score,course,teacher where student.sno=score.sno and course.cno=score.cno and course.tno=teacher.tno having class=95033 ;
16、  查询存在有85分以上成绩的课程Cno.
mysql> select cno from score where degree > 85;
17、查询至少有2名男生的班号。
mysql> select ssex,count(ssex),class from student  group by ssex,class having count(ssex)>=2;
18、查询Student表中不姓“王”的同学记录。
mysql> select * from student where sname not like '%王%';
19、查询Student表中每个学生的姓名和年龄。
mysql> select sname,year(now())-sbirthday from student;
20、查询Student表中最大和最小的Sbirthday日期值。
mysql> select max(sbirthday) as 最大值,min(sbirthday) as 最小值 from student;
21、以班号和年龄从大到小的顺序查询Student表中的全部记录。
mysql> select class,sbirthday,sno,sname,ssex from student order by class desc,sbirthday;
22、查询“男”教师及其所上的课程。
mysql> select * from teacher where tsex="男";

////////////////////////////////////////////////////////////////////////////////////////////

backup


完全备份 mysqldump
完全恢复 mysql
差异备份  备份完全备份后所有新产生的

增量备份 binlog 日志文件
增量恢复 innobackupex


物理备份（拷贝数据库文件夹） cp tar chown mysql

逻辑备份 (根据数据成sql命令） 
完全+差异                       完全+增量
1.完全 t1 10 1.bak 10      1.完全 t1 10 1.bak 10
2.差异 t1 2  2.bak 2       2.增量 t1 2  2.bak 2 
3.差异 t1 4  3.bak 6       3.增量 t1 4  3.bak 4
4.差异 t1 3  4.bak 9       4.增量 t1 3  4.bak 3

逻辑备份 -mysqldump -uroot -p123456 db> /root/db3.sql
逻辑恢复 -msql -uroot -p123456 db3 < /root/db4.sql  -mysql> source /目录/xxx.sql
-A 所有库 -B 多个库

binlog :  statement(记录命令）  row（保存数据修改）  mixed（混合双打）

/etc/my.cnf
log_bin
server_id=1~255
binlog_format=mixed

binlog 
mysqlbinlog --start-datetime="yyyy-mm-dd hh:mm:ss"  --stop-datetime="yyyy-mm-dd hh:mm:ss" /var/lib/mysql/db1-bin.000001 | mysql -uroot -p123456
mysqlbinlog --start-position=xx  --stop-position=xx /var/lib/mysql/db1-bin.000001 | mysql -uroot -p123456

mysql> show master status;  //显示日志文件及偏移量  -flush logs  
+--------------+----------+--------------+------------------+-------------------+
| File         | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |
+--------------+----------+--------------+------------------+-------------------+
| leung.000001 |    2047  |              |                  |                   |
+--------------+----------+--------------+------------------+-------------------+

mysql> purge master logs to "leung.000002"  \\删除02之前所有
mysql> reset master \\删除全部到01

逻辑全备份
innobackupex --host localhost --user root --password 123456 /allbak1 --no-timestamp
innobackupex --apply-log /allbak2/
innobackupex --copy-back /allbak2

逻辑增量备份
innobackupex  --user root --password 123456 /fullbak --no-timestamp
innobackupex --user root --password 123456 --incremental /new --incremental-basedir=/fullbak --no-timestamp






























