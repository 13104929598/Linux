--zookeeper

tar -xf hadoop/zookeeper-3.4.10.tar.gz
mv zookeeper-3.4.10/ /usr/local/zookeeper
cd /usr/local/zookeeper/conf
mv zoo_sample.cfg  zoo.cfg
vim zoo.cfg
  server.1=node1:2888:3888
  server.2=node2:2888:3888
  server.3=node3:2888:3888
  server.4=hadoop-nn01:2888:3888:observer
mkdir /tmp/zookeeper
echo 4 > /tmp/zookeeper/myid
for i in node{1..3};do scp /usr/local/zookeeper $i:/usr/local/;done
for i in node{1..3};do ssh $i mkdir /tmp/zookeeper ;done
for i in {1..3};do ssh node$i "echo $i > /tmp/zookeeper/myid" ;done
./bin/zkServer.sh start
jps
./bin/zkServer.sh status
ansible hadoop -m shell -a "/usr/local/zookeeper/bin/zkServer.sh start"
ansible hadoop -m shell -a "/usr/local/zookeeper/bin/zkServer.sh status"

################################################################################

--kafka

tar -xf hadoop/kafka_2.10-0.10.2.1.tgz
mv kafka_2.10-0.10.2.1/ /usr/local/kafka
cd /usr/local/kafka/config/
vim server.properties
  broker.id=1  //每台主机broker.id不能相同
  zookeeper.connect=localhost:2181,node1:2181,node2:2181,node3:2181  
for i in node{1..3};do scp -r /usr/local/kafka/ $i:/usr/local;done
/usr/local/kafka/bin/kafka-server-start.sh -daemon /usr/local/kafka/config/server.properties
jps
ansible hadoop -m shell -a "/usr/local/kafka/bin/kafka-server-start.sh -daemon /usr/local/kafka/config/server.properties"
ansible hadoop -m shell -a "jps"

[root@node1 local]# /usr/local/kafka/bin/kafka-topics.sh --create --partitions 1 --replication-factor 1 --zookeeper node3:2181 --topic aa    
Created topic "aa".
[root@node2 ~]# /usr/local/kafka/bin/kafka-console-producer.sh --broker-list node2:9092 --topic aa
[root@node3 ~]# /usr/local/kafka/bin/kafka-console-consumer.sh --bootstrap-server node1:9092 --topic aa

########################################################################################


















